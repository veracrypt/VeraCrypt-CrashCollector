{% extends "base.html.twig" %}

{% block pagetitle %}VeraCrypt Crash Collector | Reset Password{% endblock %}

{% block content %}
{% import "parts/forms/macros.html.twig" as forms %}
{% if form.isSubmitted() and form.isValid() %}
    <p class="text-success">The password has been updated.</p>
{% else %}
    {# @todo make the form a bit less wide #}
    <form action="{{ form.actionUrl }}" method="{{ form.getMethod() }}" class="border p-3 rounded">
        {% if form.errorMessage|default('') != '' %}
            <p class="text-danger">{{ form.errorMessage }}</p>
        {% endif %}
        <div class="row mb-3">
            {{ forms.input(form.getField('oldPassword'), {'label': 'col-sm-2 col-form-label', 'div': 'col-sm-10', 'input': 'form-control'}) }}
        </div>
        <div class="row mb-3">
            {{ forms.input(form.getField('newPassword'), {'label': 'col-sm-2 col-form-label', 'div': 'col-sm-10', 'input': 'form-control'}) }}
        </div>
        <div class="row mb-3">
            {{ forms.input(form.getField('newPasswordConfirm'), {'label': 'col-sm-2 col-form-label', 'div': 'col-sm-10', 'input': 'form-control'}) }}
        </div>
        <div class="row">
            {# note: we could make the form transparently inject the antiCSRF input, to help devs not forget displaying it...
               but then it would be easy to find out that the form never submits succesfully ;-) #}
            {{ forms.input(form.getField('antiCSRF')) }}
            {{ forms.input(form.getSubmit(), {'input': 'btn btn-primary form-control'}) }}
        </div>
    </form>
{% endif %}
{% endblock %}
